import { ValidationPipe } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Configura√ß√£o global de valida√ß√£o
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
      transformOptions: {
        enableImplicitConversion: true,
      },
    }),
  );

  // Configura√ß√£o do CORS
  app.enableCors({
    origin: ['http://localhost:3000', 'http://localhost:4000'],
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    credentials: true,
  });

  // Configura√ß√£o do Swagger
  const config = new DocumentBuilder()
    .setTitle('Sistema de Registro de Ponto')
    .setDescription('API para controle de ponto eletr√¥nico para empresas')
    .setVersion('1.0')
    .addTag('funcionarios', 'Opera√ß√µes relacionadas a funcion√°rios')
    .addTag('ponto', 'Opera√ß√µes relacionadas a registros de ponto')
    .addTag('ausencias', 'Opera√ß√µes relacionadas a aus√™ncias')
    .addTag('ferias', 'Opera√ß√µes relacionadas a f√©rias')
    .addTag('justificativas', 'Opera√ß√µes relacionadas a justificativas')
    .addTag('dashboard', 'Opera√ß√µes relacionadas ao dashboard')
    .addTag('relatorios', 'Opera√ß√µes relacionadas a relat√≥rios')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      tagsSorter: 'alpha',
      operationsSorter: 'alpha',
    },
  });

  // Prefixo global para todas as rotas
  app.setGlobalPrefix('v1');

  const port = process.env.PORT ?? 4000;
  await app.listen(port);

  console.log(`üöÄ Aplica√ß√£o rodando em: http://localhost:${port}`);
  console.log(`üìö Documenta√ß√£o Swagger: http://localhost:${port}/v1/docs`);
}
bootstrap();
